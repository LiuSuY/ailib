var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.58,1,1.58]],["body/controllers/AppController.html",[0,1.833,1,1.833,2,1.772,3,0.549,4,0.472,5,0.472,6,1.772,7,0.472,8,1.205,9,3.279,10,3.183,11,1.619,12,2.555,13,3.732,14,0.053,15,1.413,16,2.208,17,1.413,18,1.381,19,2.208,20,3.183,21,2.208,22,1.586,23,1.586,24,1.586,25,4.084,26,2.208,27,2.208,28,2.208,29,1.486,30,1.016,31,1.772,32,2.208,33,2.208,34,0.472,35,1.619,36,1.772,37,1.619,38,2.208,39,2.142,40,2.208,41,0.549,42,0.549,43,1.486,44,1.772,45,1.271,46,1.619,47,2.208,48,2.208,49,2.208,50,2.208,51,2.208,52,2.208,53,0.031,54,0.031]],["title/modules/AppModule.html",[55,1.039,56,1.58]],["body/modules/AppModule.html",[1,2.256,2,2.72,3,0.6,4,0.515,5,0.515,14,0.052,30,1.155,34,0.515,35,2.015,36,1.935,41,0.6,42,0.6,53,0.033,54,0.033,55,1.483,56,2.888,57,1.046,58,1.046,59,1.388,60,1.388,61,1.046,62,2.256,63,1.388,64,1.935,65,1.935,66,1.935,67,2.314,68,2.015,69,1.951,70,1.388,71,1.388,72,2.411,73,2.72,74,2.411,75,2.411,76,1.935,77,2.411,78,2.411,79,2.411]],["title/injectables/AppService.html",[35,1.19,80,0.498]],["body/injectables/AppService.html",[3,0.812,4,0.698,5,0.698,7,0.698,8,1.572,9,3.856,14,0.051,15,1.236,17,1.236,18,1.801,30,0.812,34,0.698,35,1.801,41,0.812,42,0.812,46,1.417,53,0.041,54,0.041,80,0.753,81,1.417,82,2.621,83,3.265,84,3.265,85,3.265]],["title/modules/AuthModule.html",[55,1.039,67,1.367]],["body/modules/AuthModule.html",[3,0.505,4,0.433,5,0.433,14,0.053,30,1.18,34,0.433,37,2.149,41,0.505,42,0.505,53,0.029,54,0.029,55,1.346,57,0.88,58,0.88,59,1.168,60,1.168,61,0.88,62,2.047,63,2.047,67,2.439,68,1.9,69,1.723,70,1.168,71,1.168,73,2.402,86,1.629,87,2.029,88,1.629,89,1.629,90,2.182,91,2.029,92,2.029,93,2.029,94,2.992,95,1.365,96,2.029,97,1.168,98,1.011,99,1.365,100,2.029,101,2.992,102,1.365,103,1.723,104,1.365,105,2.029,106,2.029,107,2.029,108,1.365,109,1.365,110,1.365,111,2.029,112,2.029,113,2.029,114,2.029,115,2.029]],["title/injectables/AuthService.html",[37,1.19,80,0.498]],["body/injectables/AuthService.html",[3,0.503,4,0.432,5,0.432,7,0.432,8,1.13,11,1.897,12,2.395,14,0.053,15,1.343,17,1.13,18,1.699,22,1.768,23,1.768,24,1.768,29,1.36,30,0.882,34,0.432,37,1.295,41,0.503,42,0.503,43,1.36,45,1.164,46,1.539,53,0.029,54,0.029,80,0.541,81,0.877,97,1.164,116,1.622,117,2.984,118,1.164,119,2.021,120,1.699,121,3.631,122,2.021,123,1.343,124,2.984,125,2.984,126,2.021,127,2.387,128,2.021,129,2.847,130,2.021,131,2.008,132,2.008,133,2.021,134,2.021,135,2.021,136,2.847,137,1.36,138,2.021,139,2.021,140,2.021,141,2.984,142,2.021,143,1.36,144,1.622,145,2.021,146,2.021,147,2.021,148,2.021]],["title/guards/JwtAuthGuard.html",[103,1.58,149,1.846]],["body/guards/JwtAuthGuard.html",[3,0.389,4,0.334,5,0.334,7,0.334,8,0.929,11,1.314,14,0.053,15,1.147,17,0.929,18,1.065,22,1.509,23,1.509,24,1.509,30,0.984,31,3.32,34,0.334,41,0.389,42,0.389,45,2.146,46,1.314,53,0.024,54,0.024,80,0.445,97,0.9,98,0.779,99,1.052,102,1.052,103,1.413,108,1.651,109,1.052,110,1.052,118,1.413,121,3.175,123,1.411,132,1.651,136,2.992,137,1.052,143,2.038,150,1.563,151,2.754,152,1.255,153,3.43,154,2.454,155,1.563,156,4.136,157,1.563,158,2.454,159,3.43,160,1.563,161,1.563,162,2.454,163,1.563,164,3.028,165,3.028,166,1.255,167,1.052,168,1.563,169,1.255,170,1.97,171,1.563,172,1.563,173,1.563,174,1.563,175,3.43,176,1.563,177,2.454,178,1.97,179,1.563,180,1.563,181,1.563,182,1.563,183,1.255,184,1.255,185,1.563,186,1.563,187,1.563,188,1.563,189,1.563,190,1.563,191,1.563]],["title/injectables/JwtStrategy.html",[80,0.498,90,1.367]],["body/injectables/JwtStrategy.html",[3,0.626,4,0.537,5,0.537,7,0.537,8,1.321,11,1.739,14,0.053,15,1.321,17,0.952,22,1.253,23,1.253,24,1.253,29,1.692,30,1.077,34,0.537,41,0.626,42,0.626,46,1.091,53,0.034,54,0.034,80,0.633,81,1.091,90,1.739,95,1.692,98,1.253,99,1.692,104,1.692,110,1.692,118,2.308,123,0.952,131,1.692,143,1.692,192,2.019,193,2.801,194,3.489,195,3.489,196,2.515,197,2.515,198,2.515,199,2.515,200,2.515,201,2.515,202,2.019,203,2.515,204,2.515,205,2.515,206,2.515,207,2.515,208,2.515,209,2.515,210,2.019,211,2.515,212,2.515]],["title/injectables/PrismaService.html",[80,0.498,213,1.19]],["body/injectables/PrismaService.html",[3,0.756,4,0.649,5,0.649,7,0.649,8,1.501,11,1.914,14,0.052,15,1.151,17,1.151,30,0.986,34,0.649,41,0.756,42,0.756,53,0.039,54,0.039,80,0.719,81,1.318,137,2.045,169,2.439,193,3.182,213,1.72,214,2.439,215,4.411,216,4.973,217,3.039,218,2.045,219,3.039]],["title/modules/UsersModule.html",[55,1.039,68,1.19]],["body/modules/UsersModule.html",[3,0.664,4,0.57,5,0.57,14,0.051,30,1.028,34,0.57,41,0.664,42,0.664,53,0.036,54,0.036,55,1.565,57,1.158,58,1.158,59,1.536,60,1.536,61,1.158,62,2.38,63,2.38,68,2.196,69,2.093,70,1.536,71,1.536,120,2.259,213,2.079,220,2.142,221,2.142,222,2.142,223,2.668,224,2.668,225,2.142]],["title/injectables/UsersService.html",[80,0.498,120,1.19]],["body/injectables/UsersService.html",[3,0.47,4,0.404,5,0.404,7,0.404,8,1.075,11,1.644,14,0.053,15,1.291,17,0.716,18,1.479,22,1.415,23,1.415,24,1.415,30,0.848,34,0.404,41,0.706,42,0.47,43,1.272,44,2.736,45,1.963,46,1.232,53,0.028,54,0.028,80,0.515,81,0.82,118,1.088,120,1.232,123,1.435,127,1.272,129,3.042,131,2.977,132,2.294,144,1.517,210,3.042,213,1.644,218,1.272,225,1.517,226,1.272,227,1.91,228,3.409,229,2.838,230,1.89,231,1.89,232,2.736,233,3.409,234,1.89,235,1.517,236,1.517,237,2.279,238,2.838,239,2.838,240,2.838,241,2.838,242,2.838,243,1.89,244,1.89,245,1.89,246,1.89]],["title/coverage.html",[247,2.492]],["body/coverage.html",[0,1.498,1,1.498,5,0.556,6,2.089,14,0.051,35,1.129,37,1.129,39,1.751,53,0.035,54,0.035,61,1.129,80,0.835,82,2.089,90,1.297,98,1.297,103,1.498,116,2.089,120,1.129,123,0.985,149,1.751,151,2.089,152,2.089,167,1.751,178,2.089,192,2.089,213,1.129,214,2.089,226,1.751,247,1.751,248,2.602,249,2.602,250,2.602,251,5.142,252,4.392,253,3.572,254,2.089,255,4.08,256,4.392,257,2.868,258,2.602,259,2.089,260,2.602,261,2.602,262,2.602]],["title/dependencies.html",[58,1.427,263,1.855]],["body/dependencies.html",[14,0.053,34,0.634,53,0.038,54,0.038,58,1.289,76,2.384,95,1.998,97,1.71,102,1.998,104,1.998,166,2.384,202,3.502,218,1.998,232,2.384,264,4.362,265,2.97,266,2.97,267,2.97,268,2.97,269,2.97,270,2.97,271,3.905,272,2.97,273,3.905,274,2.97,275,2.97,276,2.97,277,2.97,278,2.97,279,2.97,280,2.97,281,2.97,282,2.97]],["title/miscellaneous/functions.html",[283,1.003,284,2.64]],["body/miscellaneous/functions.html",[7,0.838,14,0.045,53,0.045,54,0.045,61,2.149,259,3.151,283,1.703,284,3.151,285,3.925]],["title/index.html",[7,0.494,286,2.311,287,2.311]],["body/index.html",[4,0.508,14,0.051,53,0.033,54,0.033,184,1.909,247,1.6,288,2.378,289,2.378,290,3.355,291,2.378,292,2.378,293,2.378,294,2.378,295,2.378,296,2.378,297,1.909,298,3.888,299,2.378,300,2.378,301,2.378,302,2.378,303,3.888,304,4.751,305,2.378,306,2.378,307,2.378,308,4.623,309,2.378,310,2.378,311,3.355,312,2.378,313,2.378,314,2.378,315,2.378,316,3.355,317,3.355,318,2.378,319,2.378,320,2.378,321,3.355,322,3.355,323,2.378,324,2.378,325,2.378,326,2.378,327,2.378,328,1.909,329,2.378,330,2.378,331,2.378,332,2.378,333,2.378,334,2.378,335,2.378,336,2.378,337,2.378,338,1.909,339,2.378,340,2.378,341,2.378,342,2.378,343,2.378,344,2.378,345,1.909]],["title/modules.html",[57,1.607]],["body/modules.html",[14,0.044,53,0.044,54,0.044,56,2.133,57,1.607,67,1.846,68,1.607,328,3.878,346,4.831,347,4.831,348,4.831]],["title/overview.html",[349,2.973]],["body/overview.html",[0,1.408,14,0.05,35,1.713,37,2.077,53,0.033,54,0.033,55,0.926,56,2.813,57,1.061,58,1.061,59,1.408,60,1.408,61,1.061,62,1.408,63,1.408,64,1.962,65,1.962,66,1.962,67,2.506,68,2.154,69,1.97,70,1.408,71,1.408,81,1.061,86,1.962,88,1.962,89,1.962,90,1.967,120,2.077,149,1.645,213,1.713,220,1.962,221,1.962,222,1.962,237,2.746,349,1.962,350,2.444,351,2.444]],["title/properties.html",[227,2.213,263,1.855]],["body/properties.html",[14,0.052,53,0.045,54,0.045,227,2.583,297,3.082,338,3.082,345,3.082,352,3.839,353,3.839,354,3.839]],["title/miscellaneous/typealiases.html",[283,1.003,355,3.288]],["body/miscellaneous/typealiases.html",[7,0.838,14,0.045,53,0.045,54,0.045,123,1.486,127,3.128,226,2.641,283,1.703,356,3.925,357,3.925]],["title/miscellaneous/variables.html",[283,1.003,358,2.64]],["body/miscellaneous/variables.html",[7,0.685,14,0.052,18,1.391,39,2.761,53,0.04,54,0.04,98,2.045,108,2.157,109,2.157,123,1.554,167,2.761,170,2.573,183,2.573,235,3.633,236,3.633,254,2.573,257,2.573,283,1.391,358,2.573,359,4.103,360,3.206,361,3.206,362,3.206]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":251,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":353,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":280,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":275,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":256,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":253,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":258,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":252,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":237,"title":{},"body":{"injectables/UsersService.html":{},"overview.html":{}}}],["1.0.0",{"_index":277,"title":{},"body":{"dependencies.html":{}}}],["1.0.37",{"_index":274,"title":{},"body":{"dependencies.html":{}}}],["10.0.0",{"_index":264,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":267,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":266,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":240,"title":{},"body":{"injectables/UsersService.html":{}}}],["3",{"_index":350,"title":{},"body":{"overview.html":{}}}],["3.1.1",{"_index":265,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":276,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":351,"title":{},"body":{"overview.html":{}}}],["5.4.2",{"_index":271,"title":{},"body":{"dependencies.html":{}}}],["60s",{"_index":113,"title":{},"body":{"modules/AuthModule.html":{}}}],["7.1.14",{"_index":270,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":282,"title":{},"body":{"dependencies.html":{}}}],["access",{"_index":185,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["access_token",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{}}}],["aliases",{"_index":356,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":329,"title":{},"body":{"index.html":{}}}],["app",{"_index":306,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":101,"title":{},"body":{"modules/AuthModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":296,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":56,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":35,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["assigning",{"_index":182,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["async",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["auth.guard",{"_index":105,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard.ts",{"_index":152,"title":{},"body":{"guards/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:14",{"_index":157,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["auth.guard.ts:20",{"_index":160,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["auth.guard.ts:47",{"_index":163,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["auth.service",{"_index":92,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/decorators/public.decorator",{"_index":40,"title":{},"body":{"controllers/AppController.html":{}}}],["authmodule",{"_index":67,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":338,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":37,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/PrismaService.html":{}}}],["backers",{"_index":330,"title":{},"body":{"index.html":{}}}],["bearer",{"_index":191,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["bootstrap",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":348,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":346,"title":{},"body":{"modules.html":{}}}],["building",{"_index":291,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":153,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":158,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["catch",{"_index":189,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["changeme",{"_index":239,"title":{},"body":{"injectables/UsersService.html":{}}}],["class",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["cluster_appmodule",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":86,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":88,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":87,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":89,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":220,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":221,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":222,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["configmodule",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{}}}],["constants",{"_index":99,"title":{},"body":{"modules/AuthModule.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["constructor",{"_index":118,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["constructor(jwtservice",{"_index":155,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["constructor(prisma",{"_index":230,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["constructor(userservice",{"_index":119,"title":{},"body":{"injectables/AuthService.html":{}}}],["context",{"_index":161,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["context.getclass",{"_index":173,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":172,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":174,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["coverage",{"_index":247,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["declarations",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["decorators/public.decorator",{"_index":168,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["default",{"_index":235,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":58,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":297,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":307,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":248,"title":{},"body":{"coverage.html":{}}}],["e2e",{"_index":318,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":292,"title":{},"body":{"index.html":{}}}],["example",{"_index":303,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":159,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["expiresin",{"_index":112,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":166,"title":{},"body":{"guards/JwtAuthGuard.html":{},"dependencies.html":{}}}],["extends",{"_index":193,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["extractjwt",{"_index":200,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":205,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extracttokenfromheader",{"_index":154,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["extracttokenfromheader(request",{"_index":162,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["false",{"_index":207,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findone",{"_index":229,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone(username",{"_index":233,"title":{},"body":{"injectables/UsersService.html":{}}}],["framework",{"_index":290,"title":{},"body":{"index.html":{}}}],["function",{"_index":260,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":284,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('profile",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getprofile",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(@request",{"_index":51,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(req",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":286,"title":{"index.html":{}},"body":{}}],["global",{"_index":107,"title":{},"body":{"modules/AuthModule.html":{}}}],["grow",{"_index":325,"title":{},"body":{"index.html":{}}}],["guard",{"_index":149,"title":{"guards/JwtAuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":150,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["guess",{"_index":242,"title":{},"body":{"injectables/UsersService.html":{}}}],["handlers",{"_index":187,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["hello",{"_index":84,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":184,"title":{},"body":{"guards/JwtAuthGuard.html":{},"index.html":{}}}],["https://nestjs.com",{"_index":342,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":249,"title":{},"body":{"coverage.html":{}}}],["if(user",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{}}}],["ignoreexpiration",{"_index":206,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":169,"title":{},"body":{"guards/JwtAuthGuard.html":{},"injectables/PrismaService.html":{}}}],["import",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":80,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":81,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["installation",{"_index":302,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":305,"title":{},"body":{"index.html":{}}}],["is_public_key",{"_index":167,"title":{},"body":{"guards/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ispublic",{"_index":170,"title":{},"body":{"guards/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["john",{"_index":238,"title":{},"body":{"injectables/UsersService.html":{}}}],["join",{"_index":332,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":104,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":100,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":103,"title":{"guards/JwtAuthGuard.html":{}},"body":{"modules/AuthModule.html":{},"guards/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtconstants",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":110,"title":{},"body":{"modules/AuthModule.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":204,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":96,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":106,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":121,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{}}}],["jwtstrategy",{"_index":90,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtxyzmy",{"_index":362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kamil",{"_index":339,"title":{},"body":{"index.html":{}}}],["legend",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":345,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":322,"title":{},"body":{"index.html":{}}}],["local",{"_index":273,"title":{},"body":{"dependencies.html":{}}}],["login",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":49,"title":{},"body":{"controllers/AppController.html":{}}}],["login(req",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["login(user",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{}}}],["maria",{"_index":241,"title":{},"body":{"injectables/UsersService.html":{}}}],["matching",{"_index":54,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":279,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":283,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":321,"title":{},"body":{"index.html":{}}}],["mode",{"_index":311,"title":{},"body":{"index.html":{}}}],["module",{"_index":55,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":57,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":335,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":340,"title":{},"body":{"index.html":{}}}],["name",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["nest",{"_index":298,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":344,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{},"guards/JwtAuthGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":97,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":95,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":268,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":269,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":178,"title":{},"body":{"guards/JwtAuthGuard.html":{},"coverage.html":{}}}],["node.js",{"_index":289,"title":{},"body":{"index.html":{}}}],["null",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{}}}],["object",{"_index":183,"title":{},"body":{"guards/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["onmoduleinit",{"_index":216,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":323,"title":{},"body":{"index.html":{}}}],["optional",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":349,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":263,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["passport",{"_index":202,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":94,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":199,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":194,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["password:string",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":211,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.username",{"_index":212,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["please",{"_index":333,"title":{},"body":{"index.html":{}}}],["post",{"_index":32,"title":{},"body":{"controllers/AppController.html":{}}}],["post('auth/login",{"_index":48,"title":{},"body":{"controllers/AppController.html":{}}}],["prisma",{"_index":232,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["prisma.userwhereuniqueinput",{"_index":244,"title":{},"body":{"injectables/UsersService.html":{}}}],["prisma/client",{"_index":218,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["prismaclient",{"_index":215,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaservice",{"_index":213,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":313,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":288,"title":{},"body":{"index.html":{}}}],["project",{"_index":324,"title":{},"body":{"index.html":{}}}],["promise",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":227,"title":{"properties.html":{}},"body":{"injectables/UsersService.html":{},"properties.html":{}}}],["provide",{"_index":114,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@post('auth/login",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["read",{"_index":334,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"injectables/UsersService.html":{}}}],["reflect",{"_index":278,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":156,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["repository",{"_index":301,"title":{},"body":{"index.html":{}}}],["req",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["req.user",{"_index":52,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"guards/JwtAuthGuard.html":{}}}],["request.headers.authorization?.split",{"_index":190,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["request['user",{"_index":188,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["reset",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["result",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["route",{"_index":186,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["run",{"_index":308,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":281,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":293,"title":{},"body":{"index.html":{}}}],["secret",{"_index":109,"title":{},"body":{"modules/AuthModule.html":{},"guards/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":208,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":294,"title":{},"body":{"index.html":{}}}],["setmetadata(is_public_key",{"_index":361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":295,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":111,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":327,"title":{},"body":{"index.html":{}}}],["src/.../constants.ts",{"_index":360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":285,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../public.decorator.ts",{"_index":359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.service.ts",{"_index":357,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:11",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:17",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:22",{"_index":21,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":82,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":83,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.module.ts",{"_index":91,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":116,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:10",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:19",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:6",{"_index":122,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constants.ts",{"_index":254,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorators/public.decorator.ts",{"_index":257,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/jwt",{"_index":151,"title":{},"body":{"guards/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":192,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:17",{"_index":198,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:8",{"_index":196,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/main.ts",{"_index":259,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma.service",{"_index":225,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/prisma.service.ts",{"_index":214,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma.service.ts:7",{"_index":217,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/users/users.module",{"_index":93,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":223,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/users.service.ts",{"_index":226,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/users/users.service.ts:20",{"_index":231,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:33",{"_index":234,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":243,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":309,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":312,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":314,"title":{},"body":{"index.html":{}}}],["started",{"_index":287,"title":{"index.html":{}},"body":{}}],["starter",{"_index":300,"title":{},"body":{"index.html":{}}}],["statements",{"_index":250,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":336,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":201,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["super",{"_index":203,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":328,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":347,"title":{},"body":{"modules.html":{}}}],["table",{"_index":262,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":261,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":317,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":320,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":319,"title":{},"body":{"index.html":{}}}],["tests",{"_index":316,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":326,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":219,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(req.user",{"_index":50,"title":{},"body":{"controllers/AppController.html":{}}}],["this.extracttokenfromheader(request",{"_index":176,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["this.jwtservice.sign(payload",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":180,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["this.prisma.user.findunique",{"_index":245,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":171,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["this.users.find(user",{"_index":246,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.findone(username",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":177,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["token",{"_index":175,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["touch",{"_index":337,"title":{},"body":{"index.html":{}}}],["true",{"_index":108,"title":{},"body":{"modules/AuthModule.html":{},"guards/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":179,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["twitter",{"_index":343,"title":{},"body":{"index.html":{}}}],["type",{"_index":123,"title":{},"body":{"injectables/AuthService.html":{},"guards/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":355,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types/passport",{"_index":272,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":299,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":165,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["undefined",{"_index":164,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["unit",{"_index":315,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unlicensed",{"_index":354,"title":{},"body":{"properties.html":{}}}],["useclass",{"_index":115,"title":{},"body":{"modules/AuthModule.html":{}}}],["useguards",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["user",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["user.password",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.userid",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["userid",{"_index":210,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["username",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["users",{"_index":228,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.service",{"_index":224,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/users.module",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["userservice",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersmodule",{"_index":68,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":120,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["validate",{"_index":195,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":197,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload:any",{"_index":209,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuser",{"_index":117,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username:string",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":236,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":255,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":358,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":352,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":310,"title":{},"body":{"index.html":{}}}],["we're",{"_index":181,"title":{},"body":{"guards/JwtAuthGuard.html":{}}}],["website",{"_index":341,"title":{},"body":{"index.html":{}}}],["world",{"_index":85,"title":{},"body":{"injectables/AppService.html":{}}}],["yarn",{"_index":304,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":331,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                            \n                                    \n                                getProfile\n                            \n                            \n                                    \n                                    \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('profile')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('auth/login')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Request, Post, UseGuards } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { AuthService } from './auth/auth.service';\nimport { Public } from './auth/decorators/public.decorator';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService, private authService: AuthService) { }\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n\n  @Public()\n  @Post('auth/login')\n  async login(@Request() req) {\n    return this.authService.login(req.user)\n  }\n\n  @Get('profile')\n  getProfile(@Request() req) {\n    return req.user;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule } from '@nestjs/config';\nimport { AuthModule } from './auth/auth.module';\nimport { UsersModule } from './users/users.module';\n\n@Module({\n  imports: [ConfigModule.forRoot(), AuthModule, UsersModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from 'src/users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwtConstants } from './constants';\nimport { JwtStrategy } from './jwt.strategy';\nimport { APP_GUARD } from '@nestjs/core';\nimport { JwtAuthGuard } from './jwt-auth.guard';\n\n@Module({\n  imports: [UsersModule, PassportModule,\n    JwtModule.register({\n      global: true,\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '60s' }\n    })\n  ],\n  providers: [AuthService, JwtStrategy, {\n    provide: APP_GUARD,\n    useClass: JwtAuthGuard,\n  },],\n  exports: [AuthService]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/users.service';\nimport { JwtService } from \"@nestjs/jwt\";\n\n@Injectable()\nexport class AuthService {\n    constructor(private userService: UsersService,\n        private jwtService: JwtService ){}\n\n    async validateUser(username:string, password:string): Promise {\n        const user = await this.userService.findOne(username);\n        if(user && user.password === password) {\n            const {...result} = user;\n            return result;\n        }\n        return null\n    }\n\n    async login(user: any){\n        const payload = { username: user.username, sub: user.userId };\n        return {\n            access_token: this.jwtService.sign(payload)\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/JwtAuthGuard.html":{"url":"guards/JwtAuthGuard.html","title":"guard - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/jwt-auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractTokenFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt-auth.guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-auth.guard.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractTokenFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractTokenFromHeader(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-auth.guard.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n    CanActivate,\n    ExecutionContext,\n    Injectable,\n    UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request } from 'express';\nimport { jwtConstants } from './constants';\nimport { IS_PUBLIC_KEY } from './decorators/public.decorator';\n\n@Injectable()\nexport class JwtAuthGuard implements CanActivate {\n    constructor(\n        private jwtService: JwtService,\n        private reflector: Reflector,\n    ) { }\n\n    async canActivate(context: ExecutionContext): Promise {\n        const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n            context.getHandler(),\n            context.getClass(),\n        ]);\n        if (isPublic) {\n            return true;\n        }\n\n        const request = context.switchToHttp().getRequest();\n        const token = this.extractTokenFromHeader(request);\n        if (!token) {\n            throw new UnauthorizedException();\n        }\n        try {\n            const payload = await this.jwtService.verifyAsync(token, {\n                secret: jwtConstants.secret,\n            });\n            // 💡 We're assigning the payload to the request object here\n            // so that we can access it in our route handlers\n            request['user'] = payload;\n        } catch {\n            throw new UnauthorizedException();\n        }\n        return true;\n    }\n\n    private extractTokenFromHeader(request: Request): string | undefined {\n        const [type, token] = request.headers.authorization?.split(' ') ?? [];\n        return type === 'Bearer' ? token : undefined;\n    }\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.strategy.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { ExtractJwt, Strategy } from \"passport-jwt\";\nimport { jwtConstants } from './constants';\n\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor() {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: jwtConstants.secret,\n        })\n    }\n\n    async validate(payload:any) {\n        return { userId: payload.sub, username: payload.username }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nUsersModule -->\n\nPrismaService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { PrismaService } from 'src/prisma.service';\n\n@Module({\n  providers: [UsersService, PrismaService],\n  exports: [UsersService]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n        {\n            userId: 1,\n            username: 'john',\n            password: 'changeme',\n          },\n          {\n            userId: 2,\n            username: 'maria',\n            password: 'guess',\n          },\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma.service';\n\n\nexport type User = any;\n@Injectable()\nexport class UsersService {\n    private readonly users = [\n        {\n            userId: 1,\n            username: 'john',\n            password: 'changeme',\n          },\n          {\n            userId: 2,\n            username: 'maria',\n            password: 'guess',\n          },\n    ]\n    constructor(private prisma: PrismaService) {\n\n       \n\n    }\n\n    // async findOne(username: Prisma.UserWhereUniqueInput): Promise {\n    //     return this.prisma.user.findUnique({\n    //         where: username\n    //     })\n    // }\n\n    async findOne(username: string): Promise {\n        return this.users.find(user => user.username === username)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorators/public.decorator.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorators/public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            guard\n            JwtAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.1.1\n        \n            @nestjs/passport : ^10.0.2\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.1.14\n        \n            @prisma/client : 5.4.2\n        \n            @types/passport-local : ^1.0.37\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            prisma : ^5.4.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ yarn installRunning the app\nExample :# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodTest\nExample :# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nUsersModule -->\n\nPrismaService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            User   (src/.../users.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/users/users.service.ts\n    \n    \n        \n            \n                \n                    \n                    User\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            IS_PUBLIC_KEY   (src/.../public.decorator.ts)\n                        \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            Public   (src/.../public.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/decorators/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    src/auth/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    secret: 'JWTXYZMY',\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
